"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("rxjs/add/operator/map");
require("rxjs/add/operator/do");
var http_1 = require("@angular/http");
var core_1 = require("@angular/core");
var Movie_1 = require("./Movie");
var MovieService = (function () {
    function MovieService(http) {
        this.http = http;
        this.BaseApiUrl = 'http://api.themoviedb.org/3/';
        this.API_key = '31715fcf36132790e17c1ed113a3c822';
        this.mode = 'search/multi?query=';
        this.key = "&api_key=" + this.API_key;
    }
    MovieService.prototype.getMovies = function (movie) {
        var _this = this;
        var movieName = "&query=" + encodeURI(movie);
        var searchQuery = this.BaseApiUrl + this.mode + this.key + movieName;
        return this.http.get(searchQuery)
            .map(function (res) { return _this.sanitizeData(res.json()); });
    };
    MovieService.prototype.sanitizeData = function (res) {
        var movies = new Array();
        res.results.forEach(function (element) {
            var movie = new Movie_1.Movie();
            if (element.id != null && element.id != "") {
                movie.setMovieID(element.id);
            }
            if (element.overview != null && element.overview != "") {
                movie.setOverview(element.overview);
            }
            if (element.first_air_date != null && element.first_air_date != "") {
                movie.setFirst_air_date(element.first_air_date);
            }
            if (element.popularity != null && element.popularity != "") {
                movie.setPopularity(element.popularity);
            }
            if (element.popularity != null && element.popularity != "") {
                movie.setPopularity(element.popularity);
            }
            if (element.media_type == "tv") {
                movie.setTitle(element.name + "  (TV series)");
            }
            else {
                movie.setTitle(element.original_title);
            }
            if (element.poster_path != null && element.poster_path != "" && element.poster_path != "null") {
                movie.setPath("http://image.tmdb.org/t/p/w92" + element.poster_path);
            }
            movies.push(movie);
            if (element.media_type == "person") {
                element.known_for.forEach(function (subelement) {
                    var submovie = new Movie_1.Movie();
                    if (subelement.first_air_date != null && subelement.first_air_date != "") {
                        submovie.setFirst_air_date(subelement.first_air_date);
                    }
                    if (subelement.overview != null && subelement.overview != "") {
                        submovie.setOverview(subelement.overview);
                    }
                    if (subelement.popularity != null && subelement.popularity != "") {
                        submovie.setPopularity(subelement.popularity);
                    }
                    if (subelement.media_type == "tv") {
                        submovie.setTitle(subelement.name + " (TV series)");
                    }
                    else {
                        submovie.setTitle(subelement.original_title);
                    }
                    if (subelement.id != null && subelement.id != "") {
                        submovie.setMovieID(subelement.id);
                    }
                    if (subelement.poster_path != "" && subelement.poster_path != null && subelement.poster_path != "null") {
                        submovie.setPath("http://image.tmdb.org/t/p/w92" + subelement.poster_path);
                    }
                    movies.push(submovie);
                });
            }
        });
        return movies;
    };
    return MovieService;
}());
MovieService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [http_1.Http])
], MovieService);
exports.MovieService = MovieService;
//# sourceMappingURL=data:application/json;base64,